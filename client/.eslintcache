[{"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/index.js":"1","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/App.js":"2","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/serviceWorker.js":"3","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/Home.js":"4","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/components/Header/index.js":"5","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/components/Footer/index.js":"6","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/utils/queries.js":"7","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/components/ThoughtList/index.js":"8","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/NoMatch.js":"9","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/Login.js":"10","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/Profile.js":"11","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/Signup.js":"12","/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/SingleThought.js":"13"},{"size":501,"mtime":1610481641547,"results":"14","hashOfConfig":"15"},{"size":1652,"mtime":1610563006190,"results":"16","hashOfConfig":"15"},{"size":5086,"mtime":1610481641548,"results":"17","hashOfConfig":"15"},{"size":680,"mtime":1610481641547,"results":"18","hashOfConfig":"15"},{"size":537,"mtime":1610562281304,"results":"19","hashOfConfig":"15"},{"size":234,"mtime":1610481641546,"results":"20","hashOfConfig":"15"},{"size":976,"mtime":1610582032846,"results":"21","hashOfConfig":"15"},{"size":1134,"mtime":1610562890417,"results":"22","hashOfConfig":"15"},{"size":156,"mtime":1610481641548,"results":"23","hashOfConfig":"15"},{"size":1595,"mtime":1610481641547,"results":"24","hashOfConfig":"15"},{"size":537,"mtime":1610481641548,"results":"25","hashOfConfig":"15"},{"size":1816,"mtime":1610481641548,"results":"26","hashOfConfig":"15"},{"size":1134,"mtime":1610581900818,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"rkiaua",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/index.js",[],["56","57"],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/App.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/serviceWorker.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/Home.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/components/Header/index.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/components/Footer/index.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/utils/queries.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/components/ThoughtList/index.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/NoMatch.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/Login.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/Profile.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/Signup.js",[],"/Users/sarahsafarzadeh/Documents/github/deep-thoughts/client/src/pages/SingleThought.js",["58"],"import React from \"react\";\n// React Hooks\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport ReactionList from \"../components/ReactionList\";\nimport { QUERY_THOUGHT } from \"../utils/queries\";\n\nconst SingleThought = (props) => {\n  // access the ID from the URL\n  const { id: thoughtId } = useParams();\n  console.log(thoughtId);\n\n  const { id: thoughtId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_THOUGHT, {\n    variables: { id: thoughtId },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"card mb-3\">\n        <p className=\"card-header\">\n          <span style={{ fontWeight: 700 }} className=\"text-light\">\n            {thought.username}\n          </span>{\" \"}\n          thought on {thought.createdAt}\n        </p>\n        <div className=\"card-body\">\n          <p>{thought.thoughtText}</p>\n        </div>\n      </div>\n\n      {thought.reactionCount > 0 && (\n        <ReactionList reactions={thought.reactions} />\n      )}\n    </div>\n  );\n};\n\nexport default SingleThought;\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":null,"fatal":true,"severity":2,"message":"63","line":14,"column":15},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"Parsing error: Identifier 'thoughtId' has already been declared\n\n\u001b[0m \u001b[90m 12 | \u001b[39m  console\u001b[33m.\u001b[39mlog(thoughtId)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 | \u001b[39m  \u001b[36mconst\u001b[39m { id\u001b[33m:\u001b[39m thoughtId } \u001b[33m=\u001b[39m useParams()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m  \u001b[36mconst\u001b[39m { loading\u001b[33m,\u001b[39m data } \u001b[33m=\u001b[39m useQuery(\u001b[33mQUERY_THOUGHT\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m    variables\u001b[33m:\u001b[39m { id\u001b[33m:\u001b[39m thoughtId }\u001b[33m,\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]